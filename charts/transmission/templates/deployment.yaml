apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      volumes:
        - name: env-var-volume
          emptyDir: {}
        - name: read-only-settings
          configMap:
            name: "{{ .Release.Name }}-conf"
        {{- if .Values.persistence.downloads }}
        - name: transmission-downloads
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-downloads-pvc
        {{- end }}
        {{- if .Values.persistence.config }}
        - name: config-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-config-pvc
        {{ else }}
        - name: config-volume
          emptyDir: {}
        {{- end }}

      initContainers:
        - name: update-settings
          image: python:3.9
          command: ["python", "/scripts/update_settings.py"]
          env:
            {{- if .Values.auth.enabled }}
            - name: AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.auth.useExistingSecret }}{{ .Values.auth.existingSecretName }}{{ else }}auth-secret{{ end }}
                  key: USER
            - name: AUTH_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.auth.useExistingSecret }}{{ .Values.auth.existingSecretName }}{{ else }}auth-secret{{ end }}
                  key: PASS
            {{- end }}
          volumeMounts:
            - name: read-only-settings
              mountPath: /config/read_only_settings.json
              subPath: read_only_settings.json
            - name: config-volume
              mountPath: /config
            - name: env-var-volume
              mountPath: /env-vars
      containers:
        - name: transmission
          image: {{ .Values.image }}
          volumeMounts:
            {{- if .Values.persistence.downloads }}
            - name: transmission-downloads
              mountPath: /downloads
            {{- end }}
            - name: config-volume
              mountPath: /config
            - name: env-var-volume
              mountPath: /env-vars
          env:
            {{- if .Values.auth.enabled }}
            - name: "FILE__USER"
              value: "/env-vars/USER"
            - name: "FILE__PASS"
              value: "/env-vars/PASS"
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
